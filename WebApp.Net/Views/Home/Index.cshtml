@{
    ViewData["Title"] = "Home Page";
    @model MainViewModel
}

@if (Model == null)
{
    <form asp-controller="Home" asp-action="UploadImages" method="post" enctype="multipart/form-data" id="upload-form">
        <div style="display: flex;
    justify-content: center;
    align-items: center; flex-direction: column;">
            <body>
            <div class="upload-container">
                <input type="file" id="imageUpload1" multiple accept="image/*" asp-for="Images.Images">
                <label for="imageUpload1" class="upload-button1">Загрузить изображение</label>
            </div>
        
            <div style="display: flex; justify-content: center; align-items: center; flex-direction: row;">
                <button class="btn btn-primary" type="submit" style="margin-top: 10px;">Загрузить</button>
            </div>
            
            @if (ViewData["Url"] != null)
            {
                <p style="text-align:center; font-size: 16px;margin-top:20px;">Ваша сыллка:</p>
                <p style="text-align:center; font-size: 16px; cursor: pointer;  color: blue;
            text-decoration: underline;" d="text-to-copy" onclick="copyToClipboard(this.innerText)">https://@Url.ActionContext.HttpContext.Request.Host?url=@ViewBag.Url</p>
            }

            </body>
        </div>
        <div style="display: flex; justify-content: center; align-items: center; flex-direction: row; margin-top: 10px;" id="cont">
        </div>
    </form>
}
else
{
    <div style="display: flex;
    justify-content: center;
    align-items: center; flex-direction: row;">
        @foreach (var file in Model.Images.ImagesNames)
        {
            <div class="upload-container1" style="margin-left: 15px;">
                <img src="@Url.Content($"/Image/{file}")" alt="" style=" width: 300px; height: 200px; object-fit: contain;" data-file-name="@file"/>
            </div>
        }
    </div>
    <div style="display: flex; justify-content: center; align-items: center; flex-direction: row;">
        <form method="post" asp-action="SelectImages" id="imageForm">
            <input type="hidden" name="selectedImages" id="selectedImages">
            <input type="hidden" name="id_url" id="id_url">
            <button class="btn btn-primary" style="margin-top: 10px;" id="submit_b">Выбрать</button>
        </form>
    </div>
}
<!-- Для демонстрации предпросмотра изображения -->
<img class="preview" style="display:none; max-width: 300px; margin-top: 20px;">

<script>
    document.getElementById('submit_b').addEventListener('click', function(event) {
        event.preventDefault(); // Предотвращаем стандартное поведение кнопки

        // Собираем имена файлов из активных img элементов
        var selectedFiles = Array.from(document.querySelectorAll('.upload-container1.active img[data-file-name]')).map(img => img.dataset.fileName);

        // Добавляем имена файлов в скрытое поле формы
        document.getElementById('selectedImages').value = JSON.stringify(selectedFiles);

        // Получаем значение параметра url из URL
        var urlParam = getUrlParameter('url');

        // Добавляем параметр url в форму как скрытое поле
        document.getElementById('id_url').value = urlParam; // Убедитесь, что это поле существует
        // Отправляем форму
        document.getElementById('imageForm').submit();
    });
    function getUrlParameter(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }
</script>

<style>

    .upload-container {
        position: relative;
        width: 400px; /* Изменяем размер на квадратный */
        height: 400px;
        /*border: 4px solid #b6b6bd; !* Добавляем рамку вокруг кнопки *!*/
        //cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        /*box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1); !* Внутренняя тень *!*/
    }

    .upload-container1 {
        position: relative;
        width: 300px; /* Изменяем размер на квадратный */
        height: 250px;
        border: 4px solid #b6b6bd; 
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1); /* Внутренняя тень */
    }

    .active {
        border: 4px solid #23ae0e;
    }

    #imageUpload1 {
        display: none; /* Скрываем стандартный input */
    }
    
    #imageUpload2 {
        display: none; /* Скрываем стандартный input */
    }

    .upload-button1 {
        background-color: #007bff;
        color: white;
        font-size: 24px;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease; /* Добавляем плавные переходы */
    }

    .upload-button1:hover {
        background-color: #0056b3;
        cursor: pointer;
        transform: scale(1.05); /* Анимация увеличения при наведении */
        box-shadow: 0 0 15px rgba(0, 0, 255, 0.5); /* Добавляем тень для эффекта "поднятия" */
    }

    .upload-button2 {
        background-color: #007bff;
        color: white;
        font-size: 24px;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease; /* Добавляем плавные переходы */
    }

    .upload-button2:hover {
        background-color: #0056b3;
        cursor: pointer;
        transform: scale(1.05); /* Анимация увеличения при наведении */
        box-shadow: 0 0 15px rgba(0, 0, 255, 0.5); /* Добавляем тень для эффекта "поднятия" */
    }

    #images-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Создает колонки шириной минимум 200px */
        gap: 20px; /* Расстояние между карточками */
        padding: 20px; /* Отступы вокруг контейнера */
    }

    /* Стиль для каждой картинки */
    #images-container img {
        width: 100%; /* Занимает всю ширину своей колонки */
        height: 100%; /* Сохраняет пропорции изображения */
        border-radius: 10px; /* Радиус границы для эффекта карточки */
        box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Тень для эффекта карточки */
    }

</style>

<script>
    document.getElementById('imageUpload1').addEventListener('change', function(e) {
        var fileName = e.target.files[0].name; // Получаем имя файла
        var labelElement = document.querySelector('.upload-button1');
        if(labelElement) {
            labelElement.textContent = fileName; 
        }
    });

    document.getElementById('imageUpload2').addEventListener('change', function(e) {
        var fileName = e.target.files[0].name; // Получаем имя файла
        var labelElement = document.querySelector('.upload-button2');
        if(labelElement) { 
            labelElement.textContent = fileName;
        }
    });

    async function copyToClipboard(text) {
        try {
            await navigator.clipboard.writeText(text);
        } catch (err) {
            console.error('Ошибка при копировании текста:', err);
        }
    }

</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var containers = document.querySelectorAll('.upload-container1');
        var selectedContainers = [];

        containers.forEach(function(container) {
            container.addEventListener('click', function() {
                if (selectedContainers.includes(this)) {
                    const index = selectedContainers.indexOf(this);
                    selectedContainers.splice(index, 1);
                    this.classList.remove('active');
                } else {
                    if (selectedContainers.length >= 2) {
                        return;
                    }
                    selectedContainers.push(this);
                    this.classList.add('active');
                }
            });
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var imageInput = document.getElementById('imageUpload1');
        imageInput.addEventListener('change', handleImageUpload);

        function handleImageUpload(event) {
            var files = event.target.files;
            var container = document.getElementById('cont'); // Предполагается, что это общий контейнер для всех изображений

            Array.from(files).forEach(function(file) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    var div = document.createElement('div');
                    div.className = 'upload-container1';
                    div.style.marginLeft = '15px';

                    var img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.width = '300px';
                    img.style.height = '200px';
                    img.style.objectFit = 'contain';

                    div.appendChild(img);

                    // Добавляем новый div перед последним child контейнера
                    if (container.lastElementChild) {
                        container.insertBefore(div, container.lastElementChild);
                    } else {
                        container.appendChild(div); // Если контейнер пуст, добавляем div в конец
                    }
                };
                reader.readAsDataURL(file);
            });
        }
    });
</script>